<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huixin.web.dao.CustomerAddressMapper" >
  <resultMap id="BaseResultMap" type="com.huixin.web.model.CustomerAddress" >
    <id column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="contact_name" property="contactName" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="province_id" property="provinceId" jdbcType="INTEGER" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="dist_id" property="distId" jdbcType="INTEGER" />
    <result column="address_detail" property="addressDetail" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    address_id, cust_id, contact_name, contact_phone, province_id, city_id, dist_id, 
    address_detail, is_default
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.huixin.web.model.CustomerAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_address
    where address_id = #{addressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_address
    where address_id = #{addressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huixin.web.model.CustomerAddressExample" >
    delete from customer_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huixin.web.model.CustomerAddress" >
    insert into customer_address (address_id, cust_id, contact_name, 
      contact_phone, province_id, city_id, 
      dist_id, address_detail, is_default
      )
    values (#{addressId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{contactName,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER}, #{cityId,jdbcType=INTEGER}, 
      #{distId,jdbcType=INTEGER}, #{addressDetail,jdbcType=VARCHAR}, #{isDefault,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huixin.web.model.CustomerAddress" >
    insert into customer_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="contactName != null" >
        contact_name,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="distId != null" >
        dist_id,
      </if>
      <if test="addressDetail != null" >
        address_detail,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="contactName != null" >
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="distId != null" >
        #{distId,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huixin.web.model.CustomerAddressExample" resultType="java.lang.Integer" >
    select count(*) from customer_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer_address
    <set >
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null" >
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.contactName != null" >
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.distId != null" >
        dist_id = #{record.distId,jdbcType=INTEGER},
      </if>
      <if test="record.addressDetail != null" >
        address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer_address
    set address_id = #{record.addressId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      province_id = #{record.provinceId,jdbcType=INTEGER},
      city_id = #{record.cityId,jdbcType=INTEGER},
      dist_id = #{record.distId,jdbcType=INTEGER},
      address_detail = #{record.addressDetail,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huixin.web.model.CustomerAddress" >
    update customer_address
    <set >
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="contactName != null" >
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=INTEGER},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="distId != null" >
        dist_id = #{distId,jdbcType=INTEGER},
      </if>
      <if test="addressDetail != null" >
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=BIT},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huixin.web.model.CustomerAddress" >
    update customer_address
    set cust_id = #{custId,jdbcType=INTEGER},
      contact_name = #{contactName,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=INTEGER},
      city_id = #{cityId,jdbcType=INTEGER},
      dist_id = #{distId,jdbcType=INTEGER},
      address_detail = #{addressDetail,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=BIT}
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
</mapper>