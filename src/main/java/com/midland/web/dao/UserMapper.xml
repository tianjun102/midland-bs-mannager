<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midland.web.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.midland.web.model.User">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="user_cn_name" property="userCnName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="CHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="user_type" property="userType" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="source" jdbcType="INTEGER" property="source" />
        <result column="real_registration_status" jdbcType="INTEGER" property="realRegistrationStatus" />
        <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
        <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
        <result column="is_black" jdbcType="VARCHAR" property="isBlack" />
        <result column="black_remark" jdbcType="VARCHAR" property="blackRemark" />
        <result column="identification" jdbcType="VARCHAR" property="identification" />
        <result column="idcart_img" jdbcType="VARCHAR" property="idcartImg" />
    </resultMap>
    <resultMap id="UserRoleResultMap" type="com.midland.web.model.UserRole">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="role_id" property="roleId" jdbcType="BIGINT" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username,user_cn_name, password, user_type,state,email,phone,create_time,modify_time ,source, real_registration_status, audit_status,
    audit_time, is_black, black_remark, identification, idcart_img
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.midland.web.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.midland.web.model.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.midland.web.model.User">
        insert into user (<include refid="Base_Column_List" />)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},#{userCnName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR},
        #{userType,jdbcType=BIGINT},#{state,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.midland.web.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="userCnName != null">
                user_cn_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="userCnName != null">
            	#{userCnName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=BIGINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.midland.web.model.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=CHAR},
        state = #{record.state,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.midland.web.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="userCnName != null">
                user_cn_name = #{userCnName,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.midland.web.model.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=CHAR},
        state = #{state,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 用户登录验证查询 -->
    <select id="authentication" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from user
        where state=1 
        <if test="record.flag==null or record.flag==''">
        and user_type=0 
        </if>
        and (username = #{record.username,jdbcType=VARCHAR} 
        or phone=#{record.username,jdbcType=VARCHAR} )
        and password = #{record.password,jdbcType=CHAR}
    </select>

    <!-- 分页条件查询 -->
    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.midland.web.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    
    <!-- 批量新增用户角色关系 -->
   <insert id="insertUserRoleBatch"  parameterType="java.util.List"> 
        insert into user_role (user_id,role_id)   
        values  
        <foreach collection="list" item="item" index="index" separator="," >  
            (#{item.userId,jdbcType=BIGINT},#{item.roleId,jdbcType=BIGINT}) 
        </foreach>  
   </insert>
   
   <!-- 根据用户id查找用户角色关系-->
   <select id="findUserRoleByUserId"  resultMap="UserRoleResultMap">
   	SELECT id, user_id, role_id
	  FROM user_role
	 WHERE user_id=#{userId}
    </select>
    
    <!-- 批量删除用户角色关系 -->
   <delete id="deleteUserRoleBatch">
	   	delete from user_role
	   	where user_id=#{userId,jdbcType=BIGINT}
	   	and role_id in 
	        <foreach collection="list" item="item" index="index" open="(" close=")" separator="," >  
	            #{item.roleId,jdbcType=BIGINT}
	        </foreach>
   </delete>
   
    <!-- 批量删除用户角色关系 -->
   <delete id="deleteUserRoleBatchById">
	   	delete from user_role
	   	where id in 
	        <foreach collection="list" item="item" index="index" open="(" close=")" separator="," >  
	            #{item.id,jdbcType=BIGINT}
	        </foreach>
   </delete>
   
    <!-- 通过角色id 查询角色关联的用户 -->
    <select id="selectUsersByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Long">
       SELECT DISTINCT u.id,
                u.username,
                u.user_cn_name,
                u.password,
                u.user_type,
                u.state,
                u.create_time,
                u.modify_time
	  FROM user u, user_role ur
	 WHERE u.id = ur.user_id 
	 AND ur.role_id = #{roleId,jdbcType=BIGINT}
    </select>
    
    
     <select id="queryUserForCustCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{custCode,jdbcType=VARCHAR}
    </select>
    
    
</mapper>